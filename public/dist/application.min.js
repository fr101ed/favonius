!function(){"use strict"}(),function(){"use strict";angular.module("app",["app.core","app.users","app.articles"]),angular.module("app").config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,["app"])})}(),function(){"use strict";angular.module("app.articles",[])}(),function(){"use strict";angular.module("app.core",["ngAnimate","ngSanitize","ngResource","ngCookies","ngTouch","ui.router","ui.bootstrap","ui.utils"])}(),function(){"use strict";angular.module("app.users",[])}(),function(){"use strict";function appRun(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}angular.module("app.articles").run(appRun),appRun.$inject=["Menus"]}(),function(){"use strict";function appRun(routerHelper){routerHelper.configureStates(getStates())}function getStates(){return[{state:"listArticles",config:{url:"/articles",controller:"ArticlesController",controllerAs:"vm",templateUrl:"/modules/articles/views/list-articles.client.view.html"}},{state:"createArticle",config:{url:"/articles/create",controller:"ArticlesController",controllerAs:"vm",templateUrl:"/modules/articles/views/create-article.client.view.html"}},{state:"viewArticle",config:{url:"/articles/:articleId",controller:"ArticlesController",controllerAs:"vm",templateUrl:"/modules/articles/views/view-article.client.view.html"}},{state:"editArticle",config:{url:"/articles/:articleId/edit",controller:"ArticlesController",controllerAs:"vm",templateUrl:"/modules/articles/views/edit-article.client.view.html"}}]}angular.module("app.articles").run(appRun),appRun.$inject=["routerHelper"]}(),function(){"use strict";function ArticlesController($stateParams,$location,Authentication,ArticleService){function create(){var article=new ArticleService({title:vm.title,content:vm.content});article.$save(function(response){$location.path("articles/"+response._id),vm.title="",vm.content=""},function(errorResponse){vm.error=errorResponse.data.message})}function remove(article){if(article){article.$remove();for(var i in vm.articles)vm.articles[i]===article&&vm.articles.splice(i,1)}else vm.article.$remove(function(){$location.path("articles")})}function update(){var article=vm.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){vm.error=errorResponse.data.message})}function find(){vm.articles=ArticleService.query()}function findOne(){vm.article=ArticleService.get({articleId:$stateParams.articleId})}var vm=this;vm.authentication=Authentication,vm.create=create,vm.remove=remove,vm.update=update,vm.find=find,vm.findOne=findOne}angular.module("app.articles").controller("ArticlesController",ArticlesController),ArticlesController.$inject=["$stateParams","$location","Authentication","ArticleService"]}(),function(){"use strict";function ArticleService($resource){return $resource("/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}angular.module("app.articles").factory("ArticleService",ArticleService),ArticleService.$inject=["$resource"]}(),function(){"use strict";function appRun(routerHelper){routerHelper.configureStates(getStates(),"/")}function getStates(){return[{state:"home",config:{url:"/",controller:"ArticlesController",controllerAs:"vm",templateUrl:"modules/articles/views/list-articles.client.view.html"}}]}angular.module("app.core").run(appRun),appRun.$inject=["routerHelper"]}(),function(){"use strict";function HomeController($scope,Authentication){var vm=this;vm.authentication=Authentication}angular.module("app.core").controller("HomeController",HomeController),HomeController.$inject=["$scope","Authentication"]}(),function(){"use strict";function HeaderController($scope,$timeout,Authentication,Menus){function toggleMenu(){if(vm.isAnimating)return!1;if(vm.isAnimating=!0,vm.isOpen){vm.isOpen=!1;$timeout(function(){path.attr("d",initialPath),vm.isAnimating=!1},300)}else{vm.isOpen=!0;var pos=0,nextStep=function(pos){return pos>stepsTotal-1?void(vm.isAnimating=!1):(path.animate({path:steps[pos]},0===pos?400:500,0===pos?mina.easein:mina.elastic,function(){nextStep(pos)}),void pos++)};nextStep(pos)}}var vm=this;vm.isOpen=!1,vm.isAnimating=!1,vm.toggleMenu=toggleMenu;var morphEl=document.getElementById("morph-shape"),s=Snap(morphEl.querySelector("svg")),path=s.select("path"),initialPath=path.attr("d"),steps=morphEl.getAttribute("data-morph-open").split(";"),stepsTotal=steps.length}angular.module("app.core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$timeout","Authentication","Menus"]}(),function(){"use strict";function Menus(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}angular.module("app.core").service("Menus",Menus)}(),function(){"use strict";function routerHelperProvider($locationProvider,$stateProvider,$urlRouterProvider){function RouterHelper($state){function configureStates(states,otherwisePath){states.forEach(function(state){$stateProvider.state(state.state,state.config)}),otherwisePath&&!hasOtherwise&&(hasOtherwise=!0,$urlRouterProvider.otherwise(otherwisePath))}function getStates(){return $state.get()}var hasOtherwise=!1,service={configureStates:configureStates,getStates:getStates};return service}this.$get=RouterHelper,RouterHelper.$inject=["$state"]}angular.module("app.core").provider("routerHelper",routerHelperProvider),routerHelperProvider.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function Configure($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}angular.module("app.users").config(Configure),Configure.$inject=["$httpProvider"]}(),function(){"use strict";function appRun(routerHelper){routerHelper.configureStates(getStates())}function getStates(){return[{state:"profile",config:{url:"/settings/profile",controller:"SettingsController",controllerAs:"vm",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}},{state:"password",config:{url:"/settings/password",controller:"SettingsController",controllerAs:"vm",templateUrl:"modules/users/views/settings/change-password.client.view.html"}},{state:"accounts",config:{url:"/settings/accounts",controller:"SettingsController",controllerAs:"vm",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}},{state:"signup",config:{url:"/signup",controller:"AuthenticationController",controllerAs:"vm",templateUrl:"modules/users/views/authentication/signup.client.view.html"}},{state:"signin",config:{url:"/signin",controller:"AuthenticationController",controllerAs:"vm",templateUrl:"modules/users/views/authentication/signin.client.view.html"}},{state:"forgot",config:{url:"/password/forgot",controller:"PasswordController",controllerAs:"vm",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}},{state:"reset-invalid",config:{url:"/password/reset/invalid",controller:"PasswordController",controllerAs:"vm",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}},{state:"reset-success",config:{url:"/password/reset/success",controller:"PasswordController",controllerAs:"vm",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}},{state:"reset",config:{url:"/password/reset/:token",controller:"PasswordController",controllerAs:"vm",templateUrl:"modules/users/views/password/reset-password.client.view.html"}}]}angular.module("app.users").run(appRun),appRun.$inject=["routerHelper"]}(),function(){"use strict";function AuthenticationController($http,$location,Authentication){var vm=this;vm.authentication=Authentication,vm.authentication.user&&$location.path("/"),vm.signup=function(){$http.post("/auth/signup",vm.credentials).success(function(response){vm.authentication.user=response,$location.path("/")}).error(function(response){vm.error=response.message})},vm.signin=function(){$http.post("/auth/signin",vm.credentials).success(function(response){vm.authentication.user=response,$location.path("/")}).error(function(response){vm.error=response.message})}}angular.module("app.users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$http","$location","Authentication"]}(),function(){"use strict";function PasswordController($stateParams,$http,$location,Authentication){var vm=this;vm.authentication=Authentication,vm.authentication.user&&$location.path("/"),vm.askForPasswordReset=function(){vm.success=vm.error=null,$http.post("/auth/forgot",vm.credentials).success(function(response){vm.credentials=null,vm.success=response.message}).error(function(response){vm.credentials=null,vm.error=response.message})},vm.resetUserPassword=function(){vm.success=vm.error=null,$http.post("/auth/reset/"+$stateParams.token,vm.passwordDetails).success(function(response){vm.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){vm.error=response.message})}}angular.module("app.users").controller("PasswordController",PasswordController),PasswordController.$inject=["$stateParams","$http","$location","Authentication"]}(),function(){"use strict";function SettingsController($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}angular.module("app.users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","$http","$location","Users","Authentication"]}(),function(){"use strict";function Authentication(){var _this=this;return _this._data={user:window.user},_this._data}angular.module("app.users").factory("Authentication",Authentication)}(),function(){"use strict";function Users($resource){return $resource("users",{},{update:{method:"PUT"}})}angular.module("app.users").factory("Users",Users),Users.$inject=["$resource"]}();